// automatically generated by Xtext
grammar se.gu.cse.idxse.bomi.text.Bomi with org.eclipse.xtext.common.Terminals

import "http://www.gu.se/bomi" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

BOMIModel returns BOMIModel:
	{BOMIModel}
		('boundaryObjects' '{' boundaryObjects+=BoundaryObject ( "," boundaryObjects+=BoundaryObject)* '}' )?
		('methodologicalIslands' '{' methodologicalIslands+=MethodologicalIsland ( "," methodologicalIslands+=MethodologicalIsland)* '}' )?
		('governanceTeams' '{' governanceTeams+=GovernanceTeam ( "," governanceTeams+=GovernanceTeam)* '}' )?
		('roles' '{' roles+=Role ( "," roles+=Role)* '}' )?
		('drivers' '{' drivers+=Driver ( "," drivers+=Driver)* '}' )?
		(boMiCoordinations+=BOMICoordination ( "," boMiCoordinations+=BOMICoordination)* )?
		(boRoleInteractions+=BORoleInteraction ( "," boRoleInteractions+=BORoleInteraction)*  )?									
		(boTeamGovernances+=BOTeamGovernance ( "," boTeamGovernances+=BOTeamGovernance)* )?		
	;



BoundaryObject returns BoundaryObject:
	{BoundaryObject}
	'BoundaryObject'
	name=EString
	'{'
		('superType' superType=BOSuperTypes)?
		('purpose' purpose=EString)?
		('levelOfDetail' levelOfDetail=HighLow)?
		('frequencyOfChange' frequencyOfChange=HighLow)?
		('modularity' modularity=HighLow)?
		('maintainability' maintainability=HighLow)?
		('prescriptive' prescriptive=HighLow)?
		('lifecycleStage' lifecycleStage=LifecycleStage)?
		('representationFormat' representationFormat=EString)?
		('tooling' tooling=EString)?
		('versioning' versioning=EString)?
		('upToDate' upToDate=EString)?
		('internalConsistency' internalConsistency=HighLow)?
		('externalConsistency' externalConsistency=HighLow)?
	'}';


MethodologicalIsland returns MethodologicalIsland:
	{MethodologicalIsland}
	'MethodologicalIsland'
	name=EString
	'{'
		('type' type=MIType)?
	'}';



GovernanceTeam returns GovernanceTeam:
	{GovernanceTeam}
	'GovernanceTeam'
	name=EString;
	
	
Role returns Role:
	{Role}
	'Role'
	name=EString
	'{'
		('partOfGovernanceTeams' '(' partOfGovernanceTeams+=[GovernanceTeam|EString] ( "," partOfGovernanceTeams+=[GovernanceTeam|EString])* ')' )?
		('partOfMIs' '(' partOfMIs+=[MethodologicalIsland|EString] ( "," partOfMIs+=[MethodologicalIsland|EString])* ')' )?
	'}';	
	
Driver returns Driver:
	{Driver}
	'Driver'
	name=EString
	'{'
		('driverType' driverType=DriverTypes)?
		('distanceType' distanceType=DistanceTypes)?
		('distanceSize' distanceSize=HighLow)?
		('drivesMIs' '(' drivesMIs+=[MethodologicalIsland|EString] ( "," drivesMIs+=[MethodologicalIsland|EString])* ')' )?
	'}';		
	

BOMICoordination returns BOMICoordination:
	{BOMICoordination}
	'BOMICoordination'
	name=EString
	'{'
		('purpose' purpose=EString)?
		('accessability' accessability=HighLow)?
		('stability' stability=HighLow)?
		('criticality' criticality=HighLow)?
		('fitForPurpose' fitForPurpose=HighLow)?		
		('boundaryObjects' '(' boundaryObjects+=[BoundaryObject|EString] ( "," boundaryObjects+=[BoundaryObject|EString])* ')' )?
		('methodologicalIslands' '(' methodologicalIslands+=[MethodologicalIsland|EString] ( "," methodologicalIslands+=[MethodologicalIsland|EString])* ')' )?
	'}';

BORoleInteraction returns BORoleInteraction:
	{BORoleInteraction}
	'BORoleInteraction'
	name=EString
	'{'
		('purpose' purpose=EString)?
		('accessability' accessability=HighLow)?
		('stability' stability=HighLow)?
		('criticality' criticality=HighLow)?
		('fitForPurpose' fitForPurpose=HighLow)?
		('responsible' responsible=MyBoolean)?
		('creates' creates=MyBoolean)?
		('reads' reads=MyBoolean)?
		('updates' updates=MyBoolean)?
		('deletes' deletes=MyBoolean)?
		('boundaryObjects' '(' boundaryObjects+=[BoundaryObject|EString] ( "," boundaryObjects+=[BoundaryObject|EString])* ')' )?
		('roles' '(' roles+=[Role|EString] ( "," roles+=[Role|EString])* ')' )?
	'}';




BOTeamGovernance returns BOTeamGovernance:
	{BOTeamGovernance}
	'BOTeamGovernance'
	name=EString
	'{'
		('purpose' purpose=EString)?
		('coordinationMechanism' coordinationMechanism=EString)?
		('frequencyOfCoordination' frequencyOfCoordination=HighLow)?		
		('governanceTeams' '(' governanceTeams+=[GovernanceTeam|EString] ( "," governanceTeams+=[GovernanceTeam|EString])* ')' )?
		('boundaryObjects' '(' boundaryObjects+=[BoundaryObject|EString] ( "," boundaryObjects+=[BoundaryObject|EString])* ')' )?
	'}';



EString returns ecore::EString:
	STRING | ID;

enum HighLow returns HighLow:
				NOT_SET = 'NOT_SET' | High = 'High' | Medium = 'Medium' | Low = 'Low';
				
enum MyBoolean returns MyBoolean:
				NOT_SET = 'NOT_SET' | True = 'True' | False = 'False';				

enum BOSuperTypes returns BOSuperTypes:
				NOT_SET = 'NOT_SET' | Standard = 'Standard' | Technology = 'Technology' | Task = 'Task' | Planning = 'Planning' | Value = 'Value' | Product = 'Product' | Other = 'Other';

enum LifecycleStage returns LifecycleStage:
				NOT_SET = 'NOT_SET' | Planning = 'Planning' | Operation = 'Operation' | Deprecate = 'Deprecate' | Retire = 'Retire';

enum MIType returns MIType:
				NOT_SET = 'NOT_SET' | Teams = 'Teams' | Silos = 'Silos' | Departments = 'Departments' | Organizations = 'Organizations';

enum DriverTypes returns DriverTypes:
				NOT_SET = 'NOT_SET' | Technology = 'Technology' | Process = 'Process' | Organizational = 'Organizational';

enum DistanceTypes returns DistanceTypes:
				NOT_SET = 'NOT_SET' | Cultural = 'Cultural' | Geographical = 'Geographical' | Organizational = 'Organizational';
