boRoleInteractions { 
	BORoleInteraction "PO / User Story Interaction" { 
		accessability High 
		stability Low 
		criticality High 
		fitForPurpose High 
		responsible True 
		creates True 
		updates True 
		boundaryObjects ( "User Story" ) 
		roles ( "Product Owner" )
	} , 
	BORoleInteraction "Developer / User Story Interaction" { 
		accessability High 
		stability Low 
		criticality High 
		fitForPurpose High 
		reads True boundaryObjects ( "User Story" ) roles ( Developer )
	}
} 

boundaryObjects { 
	BoundaryObject "User Story" { 
		superType Planning 
		levelOfDetail Low 
		frequencyOfChange High 
		modularity Medium 
		lifecycleStage Planning 
		representationFormat "\"As a user...\" (text in JIRA)" 
		versioning None 
		upToDate "High (during planning stage, low afterward)" 
		externalConsistency Low
	}
} 

roles { 
	Role Developer { 
		partOfMIs ( "Development Team" )
	} , 
	Role "Product Owner" { 
		partOfGovernanceTeams ( "Scrum Governance" ) 
		partOfMIs ( "Product Management" )
	}
} 

boMiCoordinations { 
	BOMICoordination "Product Management / User Story Coordination" { 
		boundaryObjects ( "User Story" ) methodologicalIslands ( "Product Management" )
	} , 
	BOMICoordination "Development Team / User Story Coordination" { 
		boundaryObjects ( "User Story" ) 
		methodologicalIslands ( "Development Team" )
	}
} 

methodologicalIslands { 
	MethodologicalIsland "Product Management" { type Teams } , 
	MethodologicalIsland "Development Team" { type Teams }
} 

governanceTeams { 
	GovernanceTeam "Scrum Governance"
} 

boTeamGovernances { 
	BOTeamGovernance governs { 
		coordinationMechanism "JIRA, Meetings" 
		frequencyOfCoordination Medium 
		boundaryObjects ( "User Story" ) governanceTeams ( "Scrum Governance" )
	}
} 

drivers { 
	Driver "Development/Project Management" { 
		driverTypeProcess True 
		driverTypeOrganizational True 
		drivesMIs ( "Product Management" , "Development Team" ) 
	}
}